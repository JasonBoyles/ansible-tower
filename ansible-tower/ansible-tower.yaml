heat_template_version: 2013-05-23

description: |
  A template that deploys an Ansible Tower node.

parameters:

  flavor:
    description: Rackspace Cloud Server flavor
    type: string
    default: 1 GB Performance
    constraints:
      - allowed_values:
        - 1 GB Performance
        - 2 GB Performance
        - 4 GB Performance
        - 8 GB Performance
        - 15 GB Performance
        - 30 GB Performance
        - 1GB Standard Instance
        - 2GB Standard Instance
        - 4GB Standard Instance
        - 8GB Standard Instance
        - 15GB Standard Instance
        - 30GB Standard Instance
        description: must be a valid Rackspace Cloud Server flavor.

  server_name:
    description: The instance name
    type: string
    default: ansible-tower

  ssh_keypair_name:
    description: |
      Nova keypair name for ssh access to the server.  This must be a keypair
      that has already been registered with Nova.
    type: string

  ansible_tower_tarball:
    description: Location of the Ansible Tower installer
    type: string
    default: |
      http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz

  ansible_release_folder:
    description: Folder name that is extracted from the installer
    type: string
    default: ansible-tower-setup

resources:

  # Random password generation
  ansible_admin_pass:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  postgres_admin_pass:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  rabbitmq_admin_pass:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  ansible_tower:
    type: "Rackspace::Cloud::Server"
    properties:
      key_name: { get_param: ssh_keypair_name }
      flavor: { get_param: flavor }
      image: Ubuntu 12.04 LTS (Precise Pangolin)
      name: { get_param: server_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            # Install dependencies
            apt-get install python-pip wget -y
            pip install ansible
            # Pull and extract the installer
            wget -ct0 %ansible_tower_tarball%
            tar xzf ansible-tower-setup-latest.tar.gz
            # Modify groupvars
            sed -i 's/pg_password: AWsecret/pg_password: %postgres_admin_pass%/' %ansible_release_folder%/group_vars/all
            sed -i 's/admin_password: password/admin_password: %ansible_admin_pass%/' %ansible_release_folder%/group_vars/all
            sed -i 's/rabbitmq_password: "AWXbunnies"/rabbitmq_password: "%rabbitmq_admin_pass%"/' %ansible_release_folder%/group_vars/all
            sed -i 's/httpd_server_name: localhost/httpd_server_name: %server_name%/' %ansible_release_folder%/group_vars/all
            sed -i 's/ - localhost/ - %server_name%/' %ansible_release_folder%/group_vars/all
            # Copy everything to working directory and install
            cd %ansible_release_folder%
            ./setup.sh
            ufw allow 443
          params:
            "%ansible_tower_tarball%": { get_param: ansible_tower_tarball }
            "%ansible_release_folder%": { get_param: ansible_release_folder }
            "%ansible_admin_pass%": { get_attr: [ansible_admin_pass, value] }
            "%postgres_admin_pass%": { get_attr: [postgres_admin_pass, value] }
            "%rabbitmq_admin_pass%": { get_attr: [rabbitmq_admin_pass, value] }
            "%server_name%": { get_param: server_name }

outputs:

  public_ip:
    value: { get_attr: [ ansible_tower, accessIPv4 ] }
    description: The public IP address of the server

  private_ip:
    value: { get_attr: [ ansible_tower, privateIPv4 ] }
    description: The private IP address of the server

  ansible_username:
    value: admin
    description: The username to use when logging into Tower

  ansible_password:
    value: { get_attr: [ansible_admin_pass, value] }
    description: The administrative password to use when logging into Tower

  ansible_url:
    value:
      str_replace:
        template: "https://%server_ip%"
        params:
          "%server_ip%": { get_attr: [ ansible_tower, accessIPv4 ] }
    description: URL for accessing Tower

  postgres_admin_password:
    value: { get_attr: [postgres_admin_pass, value] }
    description: Admin password for Postgres

  rabbitmq_admin_password:
    value: { get_attr: [rabbitmq_admin_pass, value] }
    description: Admin password for RabbitMQ
